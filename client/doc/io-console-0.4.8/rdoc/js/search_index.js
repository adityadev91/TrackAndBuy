var search_data = {"index":{"searchIndex":["io","generic_readable","beep()","console()","console_size()","cooked()","cooked!()","cursor()","cursor=()","default_console_size()","echo=()","echo?()","getch()","getch()","getpass()","getpass()","goto()","iflush()","ioflush()","noecho()","oflush()","pressed?()","raw()","raw!()","winsize()","winsize=()","makefile","win32_vk.inc"],"longSearchIndex":["io","io::generic_readable","io#beep()","io::console()","io::console_size()","io#cooked()","io#cooked!()","io#cursor()","io#cursor=()","io::default_console_size()","io#echo=()","io#echo?()","io#getch()","io::generic_readable#getch()","io#getpass()","io::generic_readable#getpass()","io#goto()","io#iflush()","io#ioflush()","io#noecho()","io#oflush()","io#pressed?()","io#raw()","io#raw!()","io#winsize()","io#winsize=()","",""],"info":[["IO","","IO.html","",""],["IO::generic_readable","","IO/generic_readable.html","",""],["beep","IO","IO.html#method-i-beep","()",""],["console","IO","IO.html#method-c-console","(*args)","<p>Returns an File instance opened console.\n<p>If <code>sym</code> is given, it will be sent to the opened console with  …\n"],["console_size","IO","IO.html#method-c-console_size","()",""],["cooked","IO","IO.html#method-i-cooked","()","<p>Yields <code>self</code> within cooked mode.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">STDIN</span>.<span class=\"ruby-identifier\">cooked</span>(<span class=\"ruby-operator\">&amp;</span><span class=\"ruby-value\">:gets</span>)\n</pre>\n<p>will read and return a line with echo back and line …\n"],["cooked!","IO","IO.html#method-i-cooked-21","()","<p>Enables cooked mode.\n<p>If the terminal mode needs to be back, use io.cooked { … }.\n<p>You must require &#39;io/console&#39; …\n"],["cursor","IO","IO.html#method-i-cursor","()",""],["cursor=","IO","IO.html#method-i-cursor-3D","(p1)",""],["default_console_size","IO","IO.html#method-c-default_console_size","()","<p>fallback to console window size\n"],["echo=","IO","IO.html#method-i-echo-3D","(p1)","<p>Enables/disables echo back. On some platforms, all combinations of this\nflags and raw/cooked mode may …\n"],["echo?","IO","IO.html#method-i-echo-3F","()","<p>Returns <code>true</code> if echo back is enabled.\n<p>You must require &#39;io/console&#39; to use this method.\n"],["getch","IO","IO.html#method-i-getch","(*args)","<p>Reads and returns a character in raw mode.\n<p>See IO#raw for details on the parameters.\n<p>You must require &#39;io/console&#39; …\n"],["getch","IO::generic_readable","IO/generic_readable.html#method-i-getch","(*args)","<p>See IO#getch.\n"],["getpass","IO","IO.html#method-i-getpass","(*args)","<p>Reads and returns a line without echo back. Prints <code>prompt</code>\nunless it is <code>nil</code>.\n<p>You must require &#39;io/console&#39; …\n"],["getpass","IO::generic_readable","IO/generic_readable.html#method-i-getpass","(*args)","<p>See IO#getpass.\n"],["goto","IO","IO.html#method-i-goto","(p1, p2)",""],["iflush","IO","IO.html#method-i-iflush","()","<p>Flushes input buffer in kernel.\n<p>You must require &#39;io/console&#39; to use this method.\n"],["ioflush","IO","IO.html#method-i-ioflush","()","<p>Flushes input and output buffers in kernel.\n<p>You must require &#39;io/console&#39; to use this method. …\n"],["noecho","IO","IO.html#method-i-noecho","()","<p>Yields <code>self</code> with disabling echo back.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">STDIN</span>.<span class=\"ruby-identifier\">noecho</span>(<span class=\"ruby-operator\">&amp;</span><span class=\"ruby-value\">:gets</span>)\n</pre>\n<p>will read and return a line without echo back. …\n"],["oflush","IO","IO.html#method-i-oflush","()","<p>Flushes output buffer in kernel.\n<p>You must require &#39;io/console&#39; to use this method.\n"],["pressed?","IO","IO.html#method-i-pressed-3F","(p1)",""],["raw","IO","IO.html#method-i-raw","(*args)","<p>Yields <code>self</code> within raw mode.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">STDIN</span>.<span class=\"ruby-identifier\">raw</span>(<span class=\"ruby-operator\">&amp;</span><span class=\"ruby-value\">:gets</span>)\n</pre>\n<p>will read and return a line without echo back and line editing. …\n"],["raw!","IO","IO.html#method-i-raw-21","(*args)","<p>Enables raw mode.\n<p>If the terminal mode needs to be back, use io.raw { … }.\n<p>See IO#raw for details on …\n"],["winsize","IO","IO.html#method-i-winsize","()","<p>Returns console size.\n<p>You must require &#39;io/console&#39; to use this method.\n"],["winsize=","IO","IO.html#method-i-winsize-3D","(p1)","<p>Tries to set console size.  The effect depends on the platform and the\nrunning environment.\n<p>You must require …\n"],["Makefile","","ext/io/console/Makefile.html","","<p>SHELL = /bin/sh\n<p># V=0 quiet, V=1 verbose.  other values don&#39;t work. V = 0 Q1 = $(V:1=)\nQ = $(Q1:0=@) …\n"],["win32_vk.inc","","ext/io/console/win32_vk_inc.html","","<p>#define UNDEFINED_VK (unsigned short)-1 #ifndef VK_LBUTTON # define\nVK_LBUTTON UNDEFINED_VK #endif #ifndef …\n"]]}}